@model Bazza.Services.LabelsPdfService.LabelsPdfViewModel
@{
    Layout = "_PdfLayout";
}

<h1 class="title">Labels für Registrierung #@Model.PersonId<br/>@Model.PersonName - @Model.PersonEmail</h1>

@for (var i = 1; i <= Math.Ceiling(Model.Articles.Count / 3d); i++)
{
    <div class="columns">
        @for (var j = 0; j < 3; j++)
        {
            <div class="column has-text-centered" style="overflow: hidden; width:33.33%; margin: 0; padding: 20px 10px; border-style: dashed; border-color: gray; border-width: @(i % 6 == 1 ? "1px" : "0") @(j == 2 ? "1px" : "0") 1px 1px; font-size: 16px;">
                @{
                    var article = Model.Articles.ElementAtOrDefault((i - 1) * 3 + j);
                }
                @if (article != null)
                {
                    <text>
                        <div>
                            <img src="@Html.Raw(article.QrCodeBase64)" style="max-width: 100%; height: 120px; display: block; margin-left: auto; margin-right: auto;" alt=""/>
                        </div>

                        <div style="margin-top:5px;">
                            @Model.PersonId-@article.Id
                        </div>
                        <div style="margin-top:1px;overflow-x: hidden; white-space: nowrap;">
                            @article.Name
                        </div>
                        <div style="margin-top:1px; font-size: 20px;">
                            Größe: @article.Size &nbsp;&nbsp;&nbsp; Preis: <b>@article.Price.ToString("N2")&nbsp;€</b>
                        </div>
                    </text>
                }
            </div>
        }
    </div>

    @if (i % 6 == 0)
    {
        <div style="page-break-before: always">
            <br/><br/><br/><br/><br/>
        </div>
    }
}